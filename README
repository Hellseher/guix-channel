# -*- mode: org; org-html-head-include-scripts: nil; -*-
#+title: Guix channel
/FFAB :: Flock Full of Aleatory Burden/

This repository contains patches contributed to <guix-patches@gnu.org> and
packaging progress. It also can be used as stand alone Guix channel.

Layout follows Guix upstream

#+BEGIN_SRC sh :results value org :results output replace :exports results
# tree ffab
# echo Total packages: $(guix package -L . -A | grep -c ffab)
# guix package -L . -A | grep -c ffab
for pkg in $(grep -r define-public ffab/ | awk '{print $2}')
do
    if guix show $pkg &>/dev/null
       then
           printf "%s :is-in-upstream " $pkg
           printf ":build-check %s\n" $(guix build --no-substitutes --quiet $pkg)
    else
           printf "%s :is-not-in-upstream " $pkg
           printf ":build-check %s\n" $(guix build --load-path=. --no-substitutes --quiet $pkg)
    fi
done
#+end_src

#+RESULTS:
#+begin_src org
#+end_src

* Examples
All examples are based on assumptions that ~guix~ is the main system or available
as package manager.

** Use as channel
~/.config/guix/channels.scm~
#+begin_src scheme
(cons* (channel
        (name 'ffab)
        ;; Mirror https://github.com/Hellseher/guix-channel
        (url "https://git.sr.ht/~hellseher/ffab"))
       %default-channels)
 #+end_src

** Use as build/install source
#+begin_example
~$ git clone https://github.com/Hellseher/guix-channel
~$ guix build -L ./guix-channel pgloader
#+end_example

* References
** Guix channels
- https://github.com/flatwhatson/guix-channel
- https://gitlab.com/nonguix/nonguix
- https://gitlab.com/guix-gaming-channels
- https://github.com/guix-science/guix-science
- https://github.com/guix-science/guix-science-nonfree
** Guix cluttered packages
- https://github.com/UMCUGenetics/guix-additions
- https://github.com/ryanprior/guix-packages
- https://github.com/BIMSBbioinfo/guix-bimsb
